pipeline {
  agent any
  environment {
    GCP_PROJECT = "mlops-learning-458705"
    IMAGE_NAME = "gcr.io/${GCP_PROJECT}/ml-project-predictor:latest"
    REMOTE_PROJECT_PATH = '/home/DELL/project-dir'
    VM_NAME = 'model-training-vm'
    ZONE = 'us-central1-c'
  }
  stages{
    stage('clone repo'){
        steps{
            checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-token', url: 'https://github.com/abhikunwar/abhi-mlops.git']])
        }
    }
  
    stage("authenticate the gcp connection and service account"){
        steps{
            withCredentials([file(credentialsId: 'gcp-keys', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]){
                echo "authenticating the gcp service account"
                sh'''
                export PATH="$PATH:/var/jenkins_home/google-cloud-sdk/bin"
                gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
                gcloud config set project ${GCP_PROJECT}
                
                '''
            }
        }
    }

    stage('Prepare Remote Directory') {
    steps {
        sh """
            gcloud compute ssh --zone "us-central1-c" DELL@"$VM_NAME" --project "$GCP_PROJECT" --command 'set -x; mkdir -p $REMOTE_PROJECT_PATH; echo "Directory created successfully"'
            gcloud compute ssh DELL@model-training-vm --zone=us-central1-c --command "sudo apt-get update && sudo apt-get install -y rsync"
            mkdir -p temp-copy
            rsync -av --exclude='.git' --exclude='venv' --exclude='__pycache__' ./ temp-copy/
            gcloud compute scp --recurse temp-copy DELL@$VM_NAME:$REMOTE_PROJECT_PATH --zone=us-central1-c
        """
    }
}

    stage("train and build docker image then push to gcr"){
        steps {
            withCredentials([file(credentialsId: 'gcp-keys', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]){
            sh """
                gcloud compute scp $GOOGLE_APPLICATION_CREDENTIALS DELL@$VM_NAME:/tmp/key.json --zone=us-central1-c --project=$GCP_PROJECT
                gcloud compute ssh DELL@$VM_NAME \
                    --zone=$ZONE \
                    --project=$GCP_PROJECT \
                    --command \"
                        cd $REMOTE_PROJECT_PATH/temp-copy && \\
                        sudo apt install -y python3 python3-venv docker.io libgomp1 && \\
                        gcloud auth activate-service-account --key-file=/tmp/key.json && \\
                        python3 -m venv venv && \\
                        . venv/bin/activate && \\
                        pip install --upgrade pip && \\
                        pip install -e . && \\
                        python pipeline/model_training_pipeline.py && \\
                        gcloud auth configure-docker -q && \\
                        sudo docker build -t gcr.io/$GCP_PROJECT/ml-project:latest . && \\
                        sudo docker push gcr.io/$GCP_PROJECT/ml-project:latest
                    \"
            """
    }
        }
}
}
}


